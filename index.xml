<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Felix' Programming Blog</title><link>https://hejfelix.github.io/blog/</link><description>Recent content on Felix' Programming Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Mar 2020 14:37:00 +0100</lastBuildDate><atom:link href="https://hejfelix.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Modularity and Paradigms</title><link>https://hejfelix.github.io/blog/post/modularity/</link><pubDate>Fri, 06 Mar 2020 14:37:00 +0100</pubDate><guid>https://hejfelix.github.io/blog/post/modularity/</guid><description>&lt;p>&lt;strong>Scala&lt;/strong> is a great &lt;em>multi-paradigm&lt;/em> programming language, but what's in a &lt;em>paradigm&lt;/em>?&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Paradigm&lt;/strong>: &lt;em>a world view underlying the theories and methodology of a particular scientific subject.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>If a paradigm is a &lt;strong>world view&lt;/strong>, it should encompass everything about a specific programming language. Programming languages that hail from academia tend to be very true to the underlying model of computation, casting all language constructs in the light of that model.&lt;/p>
&lt;p>&lt;img src="./images/bill_nye.webp" alt="Bill nye">&lt;/p></description></item></channel></rss>